template bgp ibgp_peers {
    local as LOCAL_ASN;
    source address SERVE_IP;
    graceful restart on;
    # bfd on;
    ipv4 {
        next hop self ebgp;
        igp table OSPF_table;
        table BGP_table;
        import all;
        export filter {
            if source != RTS_BGP then reject;
            dn11_update_server_location();
            accept;
        };
    };
}

template bgp ibgp_rr {
    local as LOCAL_ASN;
    source address SERVE_IP;
    rr client;
    rr cluster id <cluster_id, an ip>;
    graceful restart on;
    # bfd on;
    ipv4 {
        add paths tx;
        next hop self ebgp;
        igp table OSPF_table;
        table BGP_table;
        import all;
        export filter {
            if source != RTS_BGP then reject;
            accept;
        };
    };
}

template bgp ibgp_rr_client {
    local as LOCAL_ASN;
    source address SERVE_IP;
    graceful restart on;
    # bfd on;
    ipv4 {
        add paths rx;
        next hop self ebgp;
        igp table OSPF_table;
        table BGP_table;
        import all;
        export filter {
            if source != RTS_BGP then reject;
            dn11_update_server_location();
            accept;
        };
    };
}

# plain ibgp between RRs
protocol bgp IBGP_<name> from ibgp_peers {
    neighbor <peer_serve_ip> internal;
}

# ibgp from RR Server to RR Client
protocol bgp IBGP_<name> from ibgp_rr {
    neighbor <peer_serve_ip> internal;
}

# or a dynamic protocol
protocol bgp IBGP_RRClient from ibgp_rr {
    neighbor range <your_cidr> internal;
    dynamic name "RRClient";
    # password "string" # when needed
}

# ibgp from RR Client to RR Server
protocol bgp IBGP_<name> from ibgp_rr_client {
    neighbor <peer_serve_ip> internal;
}


